// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  fullName     String
  email        String        @unique
  password     String
  role         Role
  city         String
  address      String
  zipcode      String
  avatar       String
  tasks        Task[]
  applications Application[]
}

enum Role {
  client
  professional
  admin
}

model Task {
  id           Int           @id @default(autoincrement())
  title        String
  description  String
  location     String
  minPrice     String
  maxPrice     String
  dueDate      String
  urgency      Urgency
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  client       User?         @relation(fields: [clientId], references: [id])
  clientId     Int?
  applications Application[]
}

enum Urgency {
  high
  low
  medium
}

model Application {
  id          Int      @id @default(autoincrement())
  task        Task?    @relation(fields: [taskId], references: [id])
  taskId      Int
  applicant   User?    @relation(fields: [applicantId], references: [id])
  applicantId Int
  price       Float
  status      Status
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Status {
  Pending
  Accepted
  Rejected
}

// enum Urgency {
//   Critical
//   Urgent
//   Priority
//   Soon
//   Anytime
// }
